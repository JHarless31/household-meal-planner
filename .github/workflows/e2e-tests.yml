name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install backend dependencies
      working-directory: backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Install Playwright browsers
      working-directory: frontend
      run: npx playwright install --with-deps chromium

    - name: Setup database
      working-directory: backend
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
      run: |
        python -m alembic upgrade head

    - name: Start backend server
      working-directory: backend
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        SECRET_KEY: test-secret-key-for-e2e-tests
      run: |
        uvicorn src.main:app --host 0.0.0.0 --port 8000 &
        echo $! > backend.pid
        sleep 5
        curl http://localhost:8000/health || exit 1

    - name: Build frontend
      working-directory: frontend
      env:
        NEXT_PUBLIC_API_URL: http://localhost:8000
      run: npm run build

    - name: Start frontend server
      working-directory: frontend
      run: |
        npm run start &
        echo $! > frontend.pid
        sleep 5
        curl http://localhost:3000 || exit 1

    - name: Run E2E tests
      working-directory: frontend
      env:
        BASE_URL: http://localhost:3000
        API_URL: http://localhost:8000
      run: npx playwright test

    - name: Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: frontend/playwright-report
        retention-days: 30

    - name: Upload test screenshots
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-screenshots
        path: frontend/test-results
        retention-days: 7

    - name: Stop servers
      if: always()
      run: |
        [ -f backend/backend.pid ] && kill $(cat backend/backend.pid) || true
        [ -f frontend/frontend.pid ] && kill $(cat frontend/frontend.pid) || true

    - name: Performance test results
      if: always()
      working-directory: frontend
      run: |
        if [ -f playwright-report/performance.json ]; then
          cat playwright-report/performance.json
        fi
